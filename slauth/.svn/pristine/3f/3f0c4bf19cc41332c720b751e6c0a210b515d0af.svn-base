import { Injectable }    from '@angular/core';
import { Http, Headers, Response } from '@angular/http';

import 'rxjs/add/operator/toPromise';

declare var $:any;

@Injectable()
export class AppServices {

  session;

  headers = new Headers({'Content-Type': 'application/json'});
  host = 'http://localhost:3001';

  SIGNIN = this.host + '/api/Users/signin';

  FIND_SYSUSERS = this.host + '/api/sysusers/find';
  SIGNIN_SYSUSERS = this.host + '/api/sysusers/signin';

  FIND_MENU = this.host + '/api/Menus/find';
  LIST_MENU = this.host + '/api/Menus/list';
  INSERT_MENU = this.host + '/api/Menus/insert';
  UPDATE_MENU = this.host + '/api/Menus/update';

  FIND_ROLES = this.host + '/api/Roles/find';
  LIST_ROLES = this.host + '/api/Roles/list';
  INSERT_ROLES = this.host + '/api/Roles/insert';
  UPDATE_ROLES = this.host + '/api/Roles/update';

  FIND_WAREHOUSE = this.host + '/api/Warehouses/find';
  LIST_WAREHOUSE = this.host + '/api/Warehouses/list';
  INSERT_WAREHOUSE = this.host + '/api/Warehouses/insert';
  UPDATE_WAREHOUSE = this.host + '/api/Warehouses/update';

  FIND_STORER = this.host + '/api/Storers/find';
  LIST_STORERBYUSERS = this.host + '/api/Storers/listbyusers';
  LIST_STORER = this.host + '/api/Storers/list';
  INSERT_STORER = this.host + '/api/Storers/insert';
  UPDATE_STORER = this.host + '/api/Storers/update';

  GET_USERS = this.host + '/api/Users/get';
  FIND_USERS = this.host + '/api/Users/find';
  LIST_USERS = this.host + '/api/Users/list';
  INSERT_USERS = this.host + '/api/Users/insert';
  UPDATE_USERS = this.host + '/api/Users/update';
  CHANGEPASSWORD_USERS = this.host + '/api/Users/changepassword';

  constructor(private http: Http) {
    //this.session = {whseid: 'wmswhse1', username: 'Test', isAdmin: true};
    //this.CreateToken();
  }

  // CreateToken(){
  //   app.models.Token._regisToken('admin').then(function(token){
  //     this.session =  {
  //       'user': {whseid: '', username: 'admin', isAdmin: true},
  //       'token': token
  //     };
  //     callback(null, {
  //       'user': {whseid: '', username: 'admin', isAdmin: true},
  //       'token': token
  //     });
  //   }).catch(function(err){
  //     callback(err);
  //   });
  // }



  /* FUNCTION */
  signin(data, component): any {
    return this.handleAPI(this.SIGNIN, data, component);
  }

  // sysUsers
  findsysUsers(data, component): any {
    return this.handleAPI(this.FIND_SYSUSERS, data, component);
  }
  signinsysUsers(data, component): any {
    return this.handleAPI(this.SIGNIN_SYSUSERS, data, component);
  }

  findMenu(data, component): any {
    return this.handleAPI(this.FIND_MENU, data, component);
  }
  listMenu(data, component): any {
    return this.handleAPI(this.LIST_MENU, data, component);
  }
  insertMenu(data, component): any {
    return this.handleAPI(this.INSERT_MENU, data, component);
  }
  updateMenu(data, component): any {
    return this.handleAPI(this.UPDATE_MENU, data, component);
  }

  findRoles(data, component): any {
    return this.handleAPI(this.FIND_ROLES, data, component);
  }
  listRoles(data, component): any {
    return this.handleAPI(this.LIST_ROLES, data, component);
  }
  insertRoles(data, component): any {
    return this.handleAPI(this.INSERT_ROLES, data, component);
  }
  updateRoles(data, component): any {
    return this.handleAPI(this.UPDATE_ROLES, data, component);
  }

  findWarehouse(data, component): any {
    return this.handleAPI(this.FIND_WAREHOUSE, data, component);
  }
  listWarehouse(data, component): any {
    return this.handleAPI(this.LIST_WAREHOUSE, data, component);
  }
  insertWarehouse(data, component): any {
    return this.handleAPI(this.INSERT_WAREHOUSE, data, component);
  }
  updateWarehouse(data, component): any {
    return this.handleAPI(this.UPDATE_WAREHOUSE, data, component);
  }

  findStorer(data, component): any {
    return this.handleAPI(this.FIND_STORER, data, component);
  }
  listStorer(data, component): any {
    return this.handleAPI(this.LIST_STORER, data, component);
  }
  listStorerbyUsers(data, component): any {
    return this.handleAPI(this.LIST_STORERBYUSERS, data, component);
  }
  insertStorer(data, component): any {
    return this.handleAPI(this.INSERT_STORER, data, component);
  }
  updateStorer(data, component): any {
    return this.handleAPI(this.UPDATE_STORER, data, component);
  }

  getUsers(data, component): any {
    return this.handleAPI(this.GET_USERS, data, component);
  }
  findUsers(data, component): any {
    return this.handleAPI(this.FIND_USERS, data, component);
  }
  listUsers(data, component): any {
    return this.handleAPI(this.LIST_USERS, data, component);
  }
  insertUsers(data, component): any {
    return this.handleAPI(this.INSERT_USERS, data, component);
  }
  updateUsers(data, component): any {
    return this.handleAPI(this.UPDATE_USERS, data, component);
  }
  changePasswordUsers(data, component): any {
    return this.handleAPI(this.CHANGEPASSWORD_USERS, data, component);
  }

  /* Common Function */
  private handleAPI(URL, data, component) {
    $('.loading').fadeIn();
    return new Promise((resolve, reject) => {
      this.http.post(URL, data, this.headers)
      .toPromise()
      .then(function (response) {
        setTimeout(function(){
          $('.loading').fadeOut();
        }, 500);
        resolve({response, component});
      }).catch(function(err){
        setTimeout(function(){
          $('.loading').fadeOut();
        }, 500);
        reject({err, component});
      });
    });
  }
}
