'use strict';
var app = require('../../server/server');
var shortid = require('shortid');
var _ = require("underscore");
module.exports = function(Codelist) {
  Codelist.validatesUniquenessOf('parentuser', {scopedTo: ['listname']});
  Codelist.afterRemote('**', function(ctx, result, next) {
    if(result.res['count']){
      _.extend(ctx.result, {'total': result.res['count']});
      next();
    } else {
      var where = ctx.args;
      if(ctx.args.filter) {
        where = JSON.parse(ctx.args.filter).where;
      }
      Codelist.count(where, function (err, count) {
        _.extend(ctx.result, {'total': count});
        next();
      })
    }
  });
  Codelist.findCodelist = function(token, filter, callback) {
    var data = JSON.parse(filter);
    app.models.Token._validToken(token).then(function(result){
      Codelist.find(data).then(function(res){
        callback(null, res);
      }).catch(function(err){
        callback(err);
      })
    }).catch(function(err){
      callback(err);
    })
  };
  Codelist.insertCodelist = function(obj, callback) {
    var data = JSON.parse(obj);
    app.models.Token._validToken(data.token).then(function(result){
      Codelist.findOne({where: {'parentuser': data.parentuser, 'listname': data.listname}}).then(function(object){
        if(object){
          if(object.deleted){
            Codelist.updateAll({'parentuser': data.parentuser, 'listname': data.listname},{
              'description': data.description,
              'deleted': false,
              'adddate': new Date().toISOString(),
              'addwho': data.addwho,
              'editdate': new Date().toISOString(),
              'editwho': data.addwho
            }).then(function(res){
              data['id'] = object.id;
              callback(null, data);
            }).catch(function(err){
              callback(err);
            })
          } else {
            var err = new Error();
            err.statusCode = err.status = 404;
            err.message = 'Data is existed';
            callback(err);
          }
        } else {
          Codelist.create({
            'parentuser': data.parentuser,
            'listname': data.listname,
            'description': data.description,
            'deleted': false,
            'adddate': new Date().toISOString(),
            'addwho': data.addwho
          }).then(function(res){
            callback(null, res);
          }).catch(function(err){
            callback(err);
          })
        }
      })
    }).catch(function(err){
      callback(err);
    })
  };
  Codelist.updateCodelist = function(obj, callback) {
    var data = JSON.parse(obj);
    app.models.Token._validToken(data.token).then(function(result){
      Codelist.findOne({where: {'parentuser': data.parentuser, 'listname': data.listname}}).then(function(object){
        if(object) {
          Codelist.updateAll({'parentuser': data.parentuser, 'listname': data.listname},{
            'description': data.description,
            'deleted': data.deleted,
            'editdate': new Date().toISOString(),
            'editwho': data.editwho
          }).then(function(res){
            if(data.deleted){
              Codelist.dataSource.connector.execute('Update codelkup set deleted = ? where parentuser = ? and listname = ? ', [data.deleted, data.parentuser, data.listname], function(error, response){
                if(error) {
                  callback(error);
                }
                callback(null,data);
              });
            } else {
              callback(null,data);
            }
          }).catch(function(err){
            callback(err);
          });
        }
        else {
          var err = new Error();
          err.statusCode = err.status = 404;
          err.message = 'Data is not existed';
          callback(err);
        }
      })
    }).catch(function(err){
      callback(err);
    })
  };
};
