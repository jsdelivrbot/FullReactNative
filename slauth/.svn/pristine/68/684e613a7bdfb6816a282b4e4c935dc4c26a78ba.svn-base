import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { AppServices } from './../../app.services';
import { NotifyService } from './../../notify.service';
import * as md5 from "md5";
declare var $:any;
@Component({
  selector: 'app-header',
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.css']
})
export class HeaderComponent implements OnInit {
  data_currentuser; isChangePassword = false;
  constructor(private appServices: AppServices,  private notifyService: NotifyService, private router: Router) { }

  ngOnInit() {
  }

  Signout(){
    if (localStorage.getItem("currentUser") !== null) {
      let currentUser = JSON.parse(localStorage.getItem("currentUser"));
      this.appServices.signout({'username': currentUser.user.username}, this).then( function(success){
        localStorage.clear();
        success.component.notifyService.show('Signout Success');
        success.component.router.navigate(['admin/login']);
      }).catch(function(errtoken){
        errtoken.component.notifyService.show(errtoken, 'danger');
      })
    }
  }

  LoadProfileData() {
    this.appServices.checkToken({ 'token': this.appServices.session.token.id }, this).then(function (success) {
      let rs_token = success.response.json().res;
      success.component.appServices.findAdmin({ 'token': rs_token.id, 'username': rs_token.uid, 'status': 1, 'deleted': false }, this).then(function (obj) {
        let rs_user = obj.response.json().res;
        success.component.data_currentuser = rs_user.user;
      }).catch(function (err) {
        err.component.notifyService.show(err.err.json().error.message, 'danger');
      })
    }).catch(function (err) {
      err.component.notifyService.show(err.err.json().error.message, 'danger');
    })
  }

  updateProfileData(data){
    this.appServices.checkToken({ 'token': this.appServices.session.token.id }, this).then(function (success) {
      let rs_token = success.response.json().res;
      data['deleted'] = false;
      data['editwho'] = rs_token.uid;
      data['token'] = rs_token.id;
      data['status'] = 1;
      data['isadmin'] = success.component.appServices.session.isAdmin;
      success.component.appServices.updateAdmin(data, this).then(function(obj){
        let rs_user = obj.response.json().res;
        if(data['currentpassword']){
          if(data['password'] === data['comfirmpassword']){
            if(md5(data['currentpassword']) === rs_user.password){
              success.component.appServices.changePasswordAdmin(data, this).then(function(_obj){
                let rs = obj.response.json().res;
                success.component.isChangePassword = false;
                success.component.notifyService.show('Process Done');
              }).catch(function(err){
                err.component.notifyService.show(err.err.json().error.message, 'danger');
              });
            } else {
              success.component.notifyService.show('Curret Password not correct!', 'danger');
            }
          } else {
            success.component.notifyService.show('Comfirm password not correct!', 'danger');
          }
        } else {
          success.component.notifyService.show('Process Done');
        }
      }).catch(function(err){
        err.component.notifyService.show( err.err.json().error.message, 'danger');
      })
    }).catch(function (err) {
      err.component.notifyService.show(err.err.json().error.message, 'danger');
    })
  }

  OnChangePassword(){
    this.isChangePassword = !this.isChangePassword;
  }


}
