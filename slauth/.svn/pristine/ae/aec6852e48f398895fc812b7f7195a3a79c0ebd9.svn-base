'use strict';
var app = require('../../server/server');
var shortid = require('shortid');
var md5 = require('md5');
var limit = 12;
var _ = require("underscore");
module.exports = function(Sysmail) {
    Sysmail.validatesUniquenessOf({scopedTo: ['appcode', 'user']});
    Sysmail.observe('access', function setMaxLimit(ctx, next) {
      ctx.query.limit = limit;
      next();
    });
    Sysmail.afterRemote('**', function (ctx, result, next) {
      var where = ctx.args;
      if(ctx.args.filter) {
        where = JSON.parse(ctx.args.filter).where;
      }
      Sysmail.count(where, function (err, count) {
        _.extend(ctx.result, {'total': count});
        _.extend(ctx.result, {'page': count / limit});
        next();
      })
    });
    Sysmail.listSysMail = function(token, deleted, callback) {
      app.models.Token._validToken(token).then(function(result){
        Sysmail.dataSource.connector.execute('SELECT sysmail.id, sysmail.appcode, sysmail.user, sysmail.user, sysmail.pass, sysmail.deleted, sysmail.type, sysmail.host, sysmail.secure, sysmail.port, sysmail.status, sysmail.notes, sysmail.adddate, sysmail.addwho, sysmail.editdate, sysmail.editwho FROM sysmail WHERE sysmail.deleted = false', [deleted], function(err, obj){
          if(err) callback(err);
          callback(null, obj);
        })
      }).catch(function(err){
        callback(err);
      })
    };
    Sysmail.insertSysMail = function(token, appcode, user, pass, type, host, secure, port, status, notes, addwho, callback) {
      app.models.Token._validToken(token).then(function(result){
        Sysmail.create({
          'appcode': appcode,
          'user': user,
          'pass': pass,
          'deleted': false,
          'type': type,
          'host': host,
          'secure': secure,
          'port': port,
          'status': status,
          'notes': notes,
          'adddate': new Date().toISOString(),
          'addwho': addwho
        }).then(function(obj){
          callback(null, obj);
        }).catch(function(err){
          callback(err);
        });
      }).catch(function(err){
        callback(err);
      });
    };
    Sysmail.updateSysMail = function(token, appcode, user, pass, deleted, type, host, secure, port, status, notes, editwho, callback) {
      app.models.Token._validToken(token).then(function(result){
        Sysmail.updateAll({'appcode': appcode, 'user': user},{
          'pass': pass,
          'deleted': deleted,
          'type': type,
          'host': host,
          'secure': secure,
          'port': port,
          'status': status,
          'notes': notes,
          'editdate': new Date().toISOString(),
          'editwho': editwho
        }).then(function(obj){
          callback(null, obj);
        }).catch(function(err){
          callback(err);
        });
      }).catch(function(err){
        callback(err);
      });
    };
    Sysmail.findSysMail = function(token, filter, callback) {
      app.models.Token._validToken(token).then(function(result){
        Sysmail.find(JSON.parse(filter)).then(function(obj){
          callback(null, obj);
        }).catch(function(err){
          callback(err);
        })
      }).catch(function(err){
        callback(err);
      });
    };
};
