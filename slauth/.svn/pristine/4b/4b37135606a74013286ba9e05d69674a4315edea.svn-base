import { Injectable }    from '@angular/core';
import { Http, Headers, Response } from '@angular/http';

import 'rxjs/add/operator/toPromise';

declare var $:any;

@Injectable()
export class AppServices {
  headers = new Headers({'Content-Type': 'application/json'});
  host = 'http://localhost:2999';

  SIGNIN = this.host + '/api/Users/signin';
  SIGNINCLIENT_USERS = this.host + '/api/Users/signinclient';

  FIND_APPS = this.host + '/api/Apps/find';
  LIST_APPS = this.host + '/api/Apps/list';
  LISTALL_APPS = this.host + '/api/Apps/listall';
  LISTALLNOTOKEN_APPS = this.host + '/api/Apps/listallnotoken';
  INSERT_APPS = this.host + '/api/Apps/insert';
  UPDATE_APPS = this.host + '/api/Apps/update';
  GET_APPS = this.host + '/api/Apps/get';

  LIST_USERXAPP = this.host + '/api/UserxApps/list';
  FIND_USERXAPP = this.host + '/api/UserxApps/find';
  SAVE_USERXAPP = this.host + '/api/UserxApps/save';
  GETAPPS_USERXAPP = this.host + '/api/UserxApps/getapps';
  DELETE_USERXAPP = this.host + '/api/UserxApps/delete';

  constructor(private http: Http) { }

  /* FUNCTION */
  signin(data, component): any {
    return this.handleAPI(this.SIGNIN, data, component);
  }
  signinClientUsers(data, component): any {
    return this.handleAPI(this.SIGNINCLIENT_USERS, data, component);
  }

  findApps(data, component): any {
    return this.handleAPI(this.FIND_APPS, data, component);
  }
  listApps(data, component): any {
    return this.handleAPI(this.LIST_APPS, data, component);
  }
  listAllApps(data, component): any {
    return this.handleAPI(this.LISTALL_APPS, data, component);
  }
  listAllNoTokenApps(data, component): any {
    return this.handleAPI(this.LISTALLNOTOKEN_APPS, data, component);
  }
  insertApps(data, component): any {
    return this.handleAPI(this.INSERT_APPS, data, component);
  }
  updateApps(data, component): any {
    return this.handleAPI(this.UPDATE_APPS, data, component);
  }
  getApps(data, component): any {
    return this.handleAPI(this.GET_APPS, data, component);
  }

  listUserxApp(data, component): any {
    return this.handleAPI(this.LIST_USERXAPP, data, component);
  }
  saveUserxApp(data, component): any {
    return this.handleAPI(this.SAVE_USERXAPP, data, component);
  }
  findUserxApp(data, component): any {
    return this.handleAPI(this.FIND_USERXAPP, data, component);
  }
  getAppsUserxApp(data, component): any {
    return this.handleAPI(this.GETAPPS_USERXAPP, data, component);
  }
  deleteUserxApp(data, component): any {
    return this.handleAPI(this.DELETE_USERXAPP, data, component);
  }

  /* Common Function */
  private handleAPI(URL, data, component) {
    $('.loading').fadeIn();
    return new Promise((resolve, reject) => {
      this.http.post(URL, data, this.headers)
      .toPromise()
      .then(function (response) {
        setTimeout(function(){
          $('.loading').fadeOut();
        }, 500);
        resolve({response, component});
      })
      .catch(function(err){
        setTimeout(function(){
          $('.loading').fadeOut();
        }, 500);
        reject({err, component});
      });
    });
  }
}
