'use strict';
var app = require('../../server/server');
var shortid = require('shortid');
var md5 = require('md5');
var limit = 12;
var _ = require('underscore');
var nodemailer = require('nodemailer');

module.exports = function(SysMail) {
  SysMail.validatesUniquenessOf({scopedTo: ['appcode', 'user']});
  SysMail.observe('access', function setMaxLimit(ctx, next) {
    ctx.query.limit = limit;
    next();
  });
  SysMail.afterRemote('**', function (ctx, result, next) {
    var where = ctx.args;
    if(ctx.args.filter) {
      where = JSON.parse(ctx.args.filter).where;
    }
    SysMail.count(where, function (err, count) {
      _.extend(ctx.result, {'total': count});
      _.extend(ctx.result, {'page': count / limit});
      next();
    })
  });
  SysMail.listSysMail = function(token, deleted, callback) {
    app.models.Token._validToken(token).then(function(result){
      SysMail.dataSource.connector.execute('SELECT sysmail.id, sysmail.appcode, sysmail.user, sysmail.user, sysmail.pass, sysmail.deleted, sysmail.type, sysmail.host, sysmail.secure, sysmail.port, sysmail.status, sysmail.notes, sysmail.adddate, sysmail.addwho, sysmail.editdate, sysmail.editwho FROM sysmail WHERE sysmail.deleted = false', [deleted], function(err, obj){
        if(err) callback(err);
        callback(null, obj);
      })
    }).catch(function(err){
      callback(err);
    })
  };
  SysMail.insertSysMail = function(token, appcode, user, pass, type, host, secure, port, status, notes, addwho, callback) {
    app.models.Token._validToken(token).then(function(result){
      SysMail.create({
        'appcode': appcode,
        'user': user,
        'pass': pass,
        'deleted': false,
        'type': type,
        'host': host,
        'secure': secure,
        'port': port,
        'status': status,
        'notes': notes,
        'adddate': new Date().toISOString(),
        'addwho': addwho
      }).then(function(obj){
        callback(null, obj);
      }).catch(function(err){
        callback(err);
      });
    }).catch(function(err){
      callback(err);
    });
  };
  SysMail.updateSysMail = function(token, appcode, user, pass, deleted, type, host, secure, port, status, notes, editwho, callback) {
    app.models.Token._validToken(token).then(function(result){
      SysMail.updateAll({'appcode': appcode, 'user': user},{
        'pass': pass,
        'deleted': deleted,
        'type': type,
        'host': host,
        'secure': secure,
        'port': port,
        'status': status,
        'notes': notes,
        'editdate': new Date().toISOString(),
        'editwho': editwho
      }).then(function(obj){
        callback(null, obj);
      }).catch(function(err){
        callback(err);
      });
    }).catch(function(err){
      callback(err);
    });
  };

  SysMail.findSysMail = function(token, filter, callback) {
    app.models.Token._validToken(token).then(function(result){
      SysMail.find(JSON.parse(filter)).then(function(obj){
        callback(null, obj);
      }).catch(function(err){
        callback(err);
      })
    }).catch(function(err){
      callback(err);
    });
  };

  SysMail.sendSysMail = function(to, subject, body, callback) {
    let user = 'swm-support@gosmartlog.com';
    let pass = 'sml!@#123';
    let transporter = nodemailer.createTransport({
      type: 'smtp',
      host: 'smtp.gmail.com',
      port: 465,
      secure: true,
      auth: {
        user: user,
        pass: pass
      }
    });
    let mailOptions = {
      from: '"Support" <'+user+'>',
      to: to,
      subject: subject,
      html: body
    };
    transporter.sendMail(mailOptions, (err, data) => {
      if (err) {
        callback(err);
      } else {
        callback(null, data);
      }
    });
  };
};
